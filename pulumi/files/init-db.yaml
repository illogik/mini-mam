apiVersion: batch/v1
kind: Job
metadata:
  name: init-databases
spec:
  backoffLimit: 1
  ttlSecondsAfterFinished: 300
  template:
    spec:
      restartPolicy: Never
      containers:
        - name: psql
          image: postgres:15
          env:
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: POSTGRES_HOST
            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: POSTGRES_PORT
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: POSTGRES_USER
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: POSTGRES_PASSWORD
            - name: PGSSLMODE
              value: "require"
          command:
            - bash
            - -lc
            - |
              set -euo pipefail
              export PGPASSWORD="${PGPASSWORD}"

              # default port to 5432 if not set
              : "${POSTGRES_PORT:=5432}"

              DBS=("assets_db" "files_db" "transcode_db" "search_db")

              for db in "${DBS[@]}"; do
                echo "Ensuring database '${db}' exists..."
                if ! psql -h "$POSTGRES_HOST" -p "$POSTGRES_PORT" -U "$POSTGRES_USER" -d postgres -tAc \
                    "SELECT 1 FROM pg_database WHERE datname='${db}'" | grep -q 1; then
                  createdb -h "$POSTGRES_HOST" -p "$POSTGRES_PORT" -U "$POSTGRES_USER" "$db"
                  echo "Created database '${db}'."
                else
                  echo "Database '${db}' already exists."
                fi

                # keep ownership/privs consistent with the single DB user
                psql -h "$POSTGRES_HOST" -p "$POSTGRES_PORT" -U "$POSTGRES_USER" -d postgres -v ON_ERROR_STOP=1 \
                  -c "ALTER DATABASE \"${db}\" OWNER TO \"${POSTGRES_USER}\";"

                psql -h "$POSTGRES_HOST" -p "$POSTGRES_PORT" -U "$POSTGRES_USER" -d "${db}" -v ON_ERROR_STOP=1 \
                  -c "REVOKE ALL ON SCHEMA public FROM PUBLIC; GRANT ALL ON SCHEMA public TO \"${POSTGRES_USER}\";"
              done

              echo "done"
