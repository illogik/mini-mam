name: Build and Push Docker Images

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

env:
  DOCKER_REGISTRY: iconikio

jobs:
  build-and-push:
    if: false
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - name: api-gateway
            dockerfile: ./docker/api-gateway.Dockerfile
            context: .
            image: iconikio/mini-mam-api-gateway
          - name: assets-service
            dockerfile: ./docker/assets-service.Dockerfile
            context: .
            image: iconikio/mini-mam-assets-service
          - name: files-service
            dockerfile: ./docker/files-service.Dockerfile
            context: .
            image: iconikio/mini-mam-files-service
          - name: transcode-service
            dockerfile: ./docker/transcode-service.Dockerfile
            context: .
            image: iconikio/mini-mam-transcode-service
          - name: search-service
            dockerfile: ./docker/search-service.Dockerfile
            context: .
            image: iconikio/mini-mam-search-service
          - name: frontend
            dockerfile: ./src/frontend/Dockerfile
            context: ./src/frontend
            image: iconikio/mini-mam-frontend

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata for ${{ matrix.service.name }}
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ matrix.service.image }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha

    - name: Build and push ${{ matrix.service.name }}
      uses: docker/build-push-action@v5
      with:
        context: ${{ matrix.service.context }}
        file: ${{ matrix.service.dockerfile }}
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64

